我赢考试系统
1.包的命名      org.company.project.modle
                      com.company.project.modle
2.视图(页面原型)
     org.wyzc.elt.ui/view
     LoginFrame
     MenuFrame
     ExamFrame
		URL url = this.getClass().getResource("title.png");
		ImageIcon icon = new ImageIcon(url);
3.整个项目的结构
   MVC  
   任何界面的操作都应该交给控制器，
   控制器根据结果返回视图
   
4.完成取消退出操作
   loginFrame-->取消按钮
   其它界面关闭按钮 ---->
         this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
			}	
		});
5.模拟数据层操作
   没有数据库  把用户数据、题库数据放在文本文件中
   EntityContext--->模拟数据操作
   5.1装载用户信息
        User
   5.2装载题库信息
       Question
       考试从题库中随机选题，没个等级选2题
       所以同一个等级的题目要放在一个ArrayList集合中
       然后以等级做为key ArrayList集合做为value放入Map
       集合中
       
6.业务
      先写成接口 
      完成登陆操作
      完成开始考试
          a.显示考试界面（考虑界面上显示的数据)
            数据的第一部分 考试人的信息和考试的科目时间等信息
                      第二部分 考试的试题内容（开始开始只显示了试题内容的第一页)
                      第三部分  倒计时数据
             包装ExamInfo信息
             包装QuestionInfo信息
             完成第一部分数据内容
             完成第二部分数据内容
                       从题库中选题，20个题目，每个等级选两个
                       页面中的显示
                       上一页下一页
           b.计算成绩
           c.倒计时
           
 7.网络版
    不希望在本地版的代码中做太多的修改
    尽量是动态添加新的代码
    利用静态代理模式
      代理的实现中每个业务操作都需要连接服务器
      ，发送请求，读取影响
     7.1把请求、响应包装成对象
     7.2每个行为都是
        连接服务器，发送请求，读取数据
        包装成类的方法
     7.3完成登录
     7.4完成所有业务方法
     7.5解决分数的问题
     7.5port,ip对于用户可配置
         port对于服务器可配置 
          我们现在放在起来，真是使用要拆开
          
 8.分解成两个项目
            控制器、view、ExamServiceProxy代理在客户端
            ExamServiceImpl,EntityContext在服务器端       
            其它有些需要在服务器端客户端都存在（主要是网络中传递的)
                      
                      
                      
                      
                      
                      
                      